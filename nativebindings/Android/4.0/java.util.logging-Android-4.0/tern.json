{
  "java": {
    "util": {
      "logging": {
        "SimpleFormatter": {
          "!url": "http://developer.android.com/reference/java/util/logging/SimpleFormatter.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "formatMessage": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#formatMessage(java.util.logging.LogRecord)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getTail": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#getTail(java.util.logging.Handler)"
            },
            "getHead": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#getHead(java.util.logging.Handler)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "format": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/SimpleFormatter.html#format(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Logger": {
          "!url": "http://developer.android.com/reference/java/util/logging/Logger.html",
          "GLOBAL_LOGGER_NAME": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#GLOBAL_LOGGER_NAME"
          },
          "global": {
            "!type": "+java.util.logging.Logger",
            "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#global"
          },
          "getLogger": {
            "!type": "fn(name: string) -> +java.util.logging.Logger",
            "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getLogger(java.lang.String)"
          },
          "getAnonymousLogger": {
            "!type": "fn() -> +java.util.logging.Logger",
            "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getAnonymousLogger()"
          },
          "getGlobal": {
            "!type": "fn() -> +java.util.logging.Logger",
            "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getGlobal()"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setParent": {
              "!type": "fn(parent: +java.util.logging.Logger) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#setParent(java.util.logging.Logger)"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#setFilter(java.util.logging.Filter)"
            },
            "setUseParentHandlers": {
              "!type": "fn(notifyParentHandlers: bool) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#setUseParentHandlers(boolean)"
            },
            "logp": {
              "!type": "fn(logLevel: +java.util.logging.Level, sourceClass: string, sourceMethod: string, msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String)"
            },
            "getHandlers": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getHandlers()"
            },
            "finest": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#finest(java.lang.String)"
            },
            "getResourceBundle": {
              "!type": "fn() -> +java.util.ResourceBundle",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getResourceBundle()"
            },
            "getResourceBundleName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getResourceBundleName()"
            },
            "throwing": {
              "!type": "fn(sourceClass: string, sourceMethod: string, thrown: +java.lang.Throwable) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#throwing(java.lang.String, java.lang.String, java.lang.Throwable)"
            },
            "log": {
              "!type": "fn(logLevel: +java.util.logging.Level, msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#log(java.util.logging.Level, java.lang.String)"
            },
            "getParent": {
              "!type": "fn() -> +java.util.logging.Logger",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getParent()"
            },
            "addHandler": {
              "!type": "fn(handler: +java.util.logging.Handler) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#addHandler(java.util.logging.Handler)"
            },
            "finer": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#finer(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getFilter()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#setLevel(java.util.logging.Level)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(l: +java.util.logging.Level) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#isLoggable(java.util.logging.Level)"
            },
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getName()"
            },
            "severe": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#severe(java.lang.String)"
            },
            "fine": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#fine(java.lang.String)"
            },
            "exiting": {
              "!type": "fn(sourceClass: string, sourceMethod: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#exiting(java.lang.String, java.lang.String)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "entering": {
              "!type": "fn(sourceClass: string, sourceMethod: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#entering(java.lang.String, java.lang.String)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "warning": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#warning(java.lang.String)"
            },
            "removeHandler": {
              "!type": "fn(handler: +java.util.logging.Handler) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#removeHandler(java.util.logging.Handler)"
            },
            "info": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#info(java.lang.String)"
            },
            "getUseParentHandlers": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#getUseParentHandlers()"
            },
            "logrb": {
              "!type": "fn(logLevel: +java.util.logging.Level, sourceClass: string, sourceMethod: string, bundleName: string, msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
            },
            "config": {
              "!type": "fn(msg: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Logger.html#config(java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "SocketHandler": {
          "!url": "http://developer.android.com/reference/java/util/logging/SocketHandler.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#setEncoding(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/SocketHandler.html#close()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/SocketHandler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "LogRecord": {
          "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html",
          "!type": "fn(level: +java.util.logging.Level, msg: string)",
          "prototype": {
            "getLoggerName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getLoggerName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setMessage": {
              "!type": "fn(message: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setMessage(java.lang.String)"
            },
            "setSourceClassName": {
              "!type": "fn(sourceClassName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setSourceClassName(java.lang.String)"
            },
            "getThreadID": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getThreadID()"
            },
            "setLoggerName": {
              "!type": "fn(loggerName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setLoggerName(java.lang.String)"
            },
            "setSourceMethodName": {
              "!type": "fn(sourceMethodName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setSourceMethodName(java.lang.String)"
            },
            "getMillis": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getMillis()"
            },
            "getSourceClassName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getSourceClassName()"
            },
            "getResourceBundle": {
              "!type": "fn() -> +java.util.ResourceBundle",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getResourceBundle()"
            },
            "getResourceBundleName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getResourceBundleName()"
            },
            "setThreadID": {
              "!type": "fn(threadID: number) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setThreadID(int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setLevel": {
              "!type": "fn(level: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setLevel(java.util.logging.Level)"
            },
            "setResourceBundleName": {
              "!type": "fn(resourceBundleName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setResourceBundleName(java.lang.String)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getLevel()"
            },
            "getSourceMethodName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getSourceMethodName()"
            },
            "getParameters": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getParameters()"
            },
            "getSequenceNumber": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getSequenceNumber()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setThrown": {
              "!type": "fn(thrown: +java.lang.Throwable) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setThrown(java.lang.Throwable)"
            },
            "setSequenceNumber": {
              "!type": "fn(sequenceNumber: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setSequenceNumber(long)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "getMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getMessage()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setParameters": {
              "!type": "fn(parameters: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setParameters(java.lang.Object[])"
            },
            "setResourceBundle": {
              "!type": "fn(resourceBundle: +java.util.ResourceBundle) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setResourceBundle(java.util.ResourceBundle)"
            },
            "getThrown": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#getThrown()"
            },
            "setMillis": {
              "!type": "fn(millis: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogRecord.html#setMillis(long)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "ConsoleHandler": {
          "!url": "http://developer.android.com/reference/java/util/logging/ConsoleHandler.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#setEncoding(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/ConsoleHandler.html#close()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/ConsoleHandler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "ErrorManager": {
          "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html",
          "!type": "fn()",
          "GENERIC_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#GENERIC_FAILURE"
          },
          "FLUSH_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#FLUSH_FAILURE"
          },
          "FORMAT_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#FORMAT_FAILURE"
          },
          "OPEN_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#OPEN_FAILURE"
          },
          "WRITE_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#WRITE_FAILURE"
          },
          "CLOSE_FAILURE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#CLOSE_FAILURE"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "error": {
              "!type": "fn(message: string, exception: +java.lang.Exception, errorCode: number) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/ErrorManager.html#error(java.lang.String, java.lang.Exception, int)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "Handler": {
          "!url": "http://developer.android.com/reference/java/util/logging/Handler.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setEncoding(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#close()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "LoggingPermission": {
          "!url": "http://developer.android.com/reference/java/util/logging/LoggingPermission.html",
          "!type": "fn(name: string, actions: string)",
          "prototype": {
            "getActions": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LoggingPermission.html#getActions()"
            },
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/security/Permission.html#getName()"
            },
            "implies": {
              "!type": "fn(permission: +java.security.Permission) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/LoggingPermission.html#implies(java.security.Permission)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "checkGuard": {
              "!type": "fn(obj: +java.lang.Object) -> void",
              "!url": "http://developer.android.com/reference/java/security/Permission.html#checkGuard(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "newPermissionCollection": {
              "!type": "fn() -> +java.security.PermissionCollection",
              "!url": "http://developer.android.com/reference/java/security/Permission.html#newPermissionCollection()"
            }
          }
        },
        "MemoryHandler": {
          "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setPushLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#setPushLevel(java.util.logging.Level)"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setEncoding(java.lang.String)"
            },
            "push": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#push()"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#close()"
            },
            "getPushLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#getPushLevel()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/MemoryHandler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "LogManager": {
          "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html",
          "LOGGING_MXBEAN_NAME": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#LOGGING_MXBEAN_NAME"
          },
          "getLoggingMXBean": {
            "!type": "fn() -> +java.util.logging.LoggingMXBean",
            "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#getLoggingMXBean()"
          },
          "getLogManager": {
            "!type": "fn() -> +java.util.logging.LogManager",
            "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#getLogManager()"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "addLogger": {
              "!type": "fn(logger: +java.util.logging.Logger) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#addLogger(java.util.logging.Logger)"
            },
            "checkAccess": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#checkAccess()"
            },
            "getProperty": {
              "!type": "fn(name: string) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#getProperty(java.lang.String)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "addPropertyChangeListener": {
              "!type": "fn(l: +java.beans.PropertyChangeListener) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#addPropertyChangeListener(java.beans.PropertyChangeListener)"
            },
            "getLogger": {
              "!type": "fn(name: string) -> +java.util.logging.Logger",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#getLogger(java.lang.String)"
            },
            "readConfiguration": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#readConfiguration()"
            },
            "reset": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#reset()"
            },
            "getLoggerNames": {
              "!type": "fn() -> +java.util.Enumeration",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#getLoggerNames()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "removePropertyChangeListener": {
              "!type": "fn(l: +java.beans.PropertyChangeListener) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/LogManager.html#removePropertyChangeListener(java.beans.PropertyChangeListener)"
            }
          }
        },
        "FileHandler": {
          "!url": "http://developer.android.com/reference/java/util/logging/FileHandler.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#setEncoding(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/FileHandler.html#close()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/FileHandler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "Level": {
          "!url": "http://developer.android.com/reference/java/util/logging/Level.html",
          "FINEST": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#FINEST"
          },
          "INFO": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#INFO"
          },
          "WARNING": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#WARNING"
          },
          "FINER": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#FINER"
          },
          "ALL": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#ALL"
          },
          "FINE": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#FINE"
          },
          "SEVERE": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#SEVERE"
          },
          "OFF": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#OFF"
          },
          "CONFIG": {
            "!type": "+java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#CONFIG"
          },
          "parse": {
            "!type": "fn(name: string) -> +java.util.logging.Level",
            "!url": "http://developer.android.com/reference/java/util/logging/Level.html#parse(java.lang.String)"
          },
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#getName()"
            },
            "intValue": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#intValue()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#equals(java.lang.Object)"
            },
            "getLocalizedName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#getLocalizedName()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getResourceBundleName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#getResourceBundleName()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/logging/Level.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "StreamHandler": {
          "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()"
            },
            "setFilter": {
              "!type": "fn(newFilter: +java.util.logging.Filter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)"
            },
            "setEncoding": {
              "!type": "fn(charsetName: string) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#setEncoding(java.lang.String)"
            },
            "getFilter": {
              "!type": "fn() -> +java.util.logging.Filter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()"
            },
            "setErrorManager": {
              "!type": "fn(newErrorManager: +java.util.logging.ErrorManager) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)"
            },
            "setLevel": {
              "!type": "fn(newLevel: +java.util.logging.Level) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getLevel": {
              "!type": "fn() -> +java.util.logging.Level",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()"
            },
            "isLoggable": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> bool",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#isLoggable(java.util.logging.LogRecord)"
            },
            "setFormatter": {
              "!type": "fn(newFormatter: +java.util.logging.Formatter) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#close()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#flush()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getErrorManager": {
              "!type": "fn() -> +java.util.logging.ErrorManager",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()"
            },
            "publish": {
              "!type": "fn(record: +java.util.logging.LogRecord) -> void",
              "!url": "http://developer.android.com/reference/java/util/logging/StreamHandler.html#publish(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getFormatter": {
              "!type": "fn() -> +java.util.logging.Formatter",
              "!url": "http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()"
            }
          }
        },
        "Formatter": {
          "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "formatMessage": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#formatMessage(java.util.logging.LogRecord)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getTail": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#getTail(java.util.logging.Handler)"
            },
            "getHead": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#getHead(java.util.logging.Handler)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "format": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#format(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "XMLFormatter": {
          "!url": "http://developer.android.com/reference/java/util/logging/XMLFormatter.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "formatMessage": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/Formatter.html#formatMessage(java.util.logging.LogRecord)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getTail": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/XMLFormatter.html#getTail(java.util.logging.Handler)"
            },
            "getHead": {
              "!type": "fn(h: +java.util.logging.Handler) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/XMLFormatter.html#getHead(java.util.logging.Handler)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "format": {
              "!type": "fn(r: +java.util.logging.LogRecord) -> string",
              "!url": "http://developer.android.com/reference/java/util/logging/XMLFormatter.html#format(java.util.logging.LogRecord)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        }
      }
    }
  }
}